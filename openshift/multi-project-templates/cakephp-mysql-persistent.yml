apiVersion: template.openshift.io/v1
kind: Template
labels:
  app: cakephp-example
  template: cakephp-multi-project-mysql-persistent
message: |-
  MySQL database deployment has been configured in project: ${DATABASE_NAMESPACE}.

  For more information about using this template, including OpenShift considerations, see https://github.com/redhat-gpte-devopsautomation/cakephp-ex/blob/master/README.md.
metadata:
  annotations:
    description: CakePHP MySQL database configuration for configuration across multiple
      namespaces. For more information about using this template, including
      OpenShift considerations, see
      https://github.com/redhat-gpte-devopsautomation/cakephp-ex/blob/master/README.md.
    iconClass: icon-php
    openshift.io/display-name: CakePHP + MySQL
    openshift.io/documentation-url: https://github.com/redhat-gpte-devopsautomation/cakephp-ex
    openshift.io/long-description:
      This template defines a DeploymentConfig and ImageStream for a CakePHP
      example application. This template is meant to be used with separate
      deployment and namespace initialization templates.
    openshift.io/provider-display-name: Red Hat, Inc.
    tags: quickstart,php,cakephp
    template.openshift.io/bindable: "false"
  labels:
    samples.operator.openshift.io/managed: "true"
  name: cakephp-multi-project-mysql-persistent
parameters:
- name: NAME
  description: The name assigned to all of the frontend objects defined in this template.
  displayName: Name
  required: true
  value: cakephp-mysql-persistent
- name: DATABASE_NAMESPACE
  displayName: Database Namespace
  description: >-
    The OpenShift Namespace where the Database deployment and service reside.
  required: true
  value: cakephp-example-database
- name: IMAGE_NAMESPACE
  displayName: Image Namespace
  description: The OpenShift Namespace where the PHP S2I ImageStream resides.
  required: true
  value: openshift
- name: MEMORY_MYSQL_LIMIT
  description: Maximum amount of memory the MySQL container can use.
  displayName: Memory Limit (MySQL)
  required: true
  value: 512Mi
- name: VOLUME_CAPACITY
  description: Volume space available for data, e.g. 512Mi, 2Gi
  displayName: Volume Capacity
  required: true
  value: 1Gi
- name: DATABASE_SERVICE_NAME
  displayName: Database Service Name
  required: true
  value: mysql
- name: DATABASE_NAME
  displayName: Database Name
  required: true
  value: default
- name: DATABASE_USER
  displayName: Database User
  required: true
  value: cakephp
- name: DATABASE_PASSWORD
  displayName: Database Password
  generate: expression
  from: '[a-zA-Z0-9]{16}'
- name: MYSQL_DEFAULT_AUTHENTICATION_PLUGIN
  displayName: MySQL authentication plugin
  description: 'The custom MySQL default authentication plugin (default: mysql_native_password), might be changed to caching_sha2_password once PHP client supports it.'
  value: mysql_native_password
objects:
- kind: Service
  apiVersion: v1
  metadata:
    annotations:
      description: Exposes the database server
    name: ${DATABASE_SERVICE_NAME}
    namespace: ${DATABASE_NAMESPACE}
  spec:
    ports:
    - name: mysql
      port: 3306
      targetPort: 3306
    selector:
      name: ${DATABASE_SERVICE_NAME}
- kind: DeploymentConfig
  apiVersion: v1
  metadata:
    annotations:
      description: Defines how to deploy the database
      template.alpha.openshift.io/wait-for-ready: "true"
    name: ${DATABASE_SERVICE_NAME}
    namespace: ${DATABASE_NAMESPACE}
  spec:
    replicas: 1
    selector:
      name: ${DATABASE_SERVICE_NAME}
    strategy:
      type: Recreate
      resources:
        requests:
          cpu: 50m
          memory: 100Mi
        limits:
          cpu: 500m
          memory: 100Mi
    template:
      metadata:
        labels:
          name: ${DATABASE_SERVICE_NAME}
        name: ${DATABASE_SERVICE_NAME}
      spec:
        containers:
        - env:
          - name: MYSQL_USER
            valueFrom:
              secretKeyRef:
                key: database-user
                name: ${NAME}
          - name: MYSQL_PASSWORD
            valueFrom:
              secretKeyRef:
                key: database-password
                name: ${NAME}
          - name: MYSQL_DATABASE
            value: ${DATABASE_NAME}
          - name: MYSQL_DEFAULT_AUTHENTICATION_PLUGIN
            value: ${MYSQL_DEFAULT_AUTHENTICATION_PLUGIN}
          image: ' '
          livenessProbe:
            initialDelaySeconds: 30
            tcpSocket:
              port: 3306
            timeoutSeconds: 1
          name: mysql
          ports:
          - containerPort: 3306
          readinessProbe:
            exec:
              command:
              - /bin/sh
              - -i
              - -c
              #- MYSQL_PWD='${DATABASE_PASSWORD}' mysql -h 127.0.0.1 -u ${DATABASE_USER}
              #  -D ${DATABASE_NAME} -e 'SELECT 1'
              - MYSQL_PWD="${MYSQL_PASSWORD}" mysql -h 127.0.0.1 -u ${MYSQL_USER}
                -D ${MYSQL_DATABASE} -e 'SELECT 1'
            initialDelaySeconds: 5
            timeoutSeconds: 1
          resources:
            limits:
              memory: ${MEMORY_MYSQL_LIMIT}
          volumeMounts:
          - mountPath: /var/lib/mysql/data
            name: ${DATABASE_SERVICE_NAME}-data
        volumes:
        - name: ${DATABASE_SERVICE_NAME}-data
          persistentVolumeClaim:
            claimName: ${DATABASE_SERVICE_NAME}
    triggers:
    - imageChangeParams:
        automatic: true
        containerNames:
        - mysql
        from:
          kind: ImageStreamTag
          name: mysql:8.0-el8
          namespace: ${IMAGE_NAMESPACE}
      type: ImageChange
    - type: ConfigChange
