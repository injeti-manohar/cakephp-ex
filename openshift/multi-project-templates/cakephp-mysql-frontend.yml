apiVersion: template.openshift.io/v1
kind: Template
metadata:
  name: cakephp-mysql-frontend
  annotations:
    description: An example CakePHP application with a MySQL database. For more information
      about using this template, including OpenShift considerations, see https://github.com/sclorg/cakephp-ex/blob/master/README.md.
    iconClass: icon-php
    openshift.io/display-name: CakePHP + MySQL
    openshift.io/documentation-url: https://github.com/sclorg/cakephp-ex
    openshift.io/long-description: This template defines resources needed to develop
      a CakePHP application, including a build configuration, application deployment
      configuration, and database deployment configuration.
    openshift.io/provider-display-name: Red Hat, Inc.
    openshift.io/support-url: https://access.redhat.com
    samples.operator.openshift.io/version: 4.6.17
    tags: quickstart,php,cakephp
    template.openshift.io/bindable: "false"
labels:
  app: cakephp-mysql-persistent
  template: cakephp-mysql-persistent
message: |-
  The following service(s) have been created in your project: ${NAME}, ${DATABASE_SERVICE_NAME}.

  For more information about using this template, including OpenShift considerations, see https://github.com/sclorg/cakephp-ex/blob/master/README.md.
parameters:
- name: FRONTEND_NAMESPACE
  displayName: Frontend Namespace
  description: >-
    The OpenShift Namespace where the Frontend application deployment, route,
    and service reside.
  required: true
  value: cakephp-example-frontend
- name: BUILD_NAMESPACE
  displayName: Build Namespace
  description: >-
    The OpenShift Namespace where the ImageStream and BuildConfig reside.
  required: true
  value: cakephp-example-build
- description: The name assigned to all of the frontend objects defined in this template.
  displayName: Name
  name: NAME
  required: true
  value: cakephp-mysql-persistent
- description: The OpenShift Namespace where the ImageStream resides.
  displayName: Namespace
  name: NAMESPACE
  required: true
  value: openshift
- description: Version of PHP image to be used (7.3-ubi7, 7.3-ubi8, or latest).
  displayName: PHP Version
  name: PHP_VERSION
  required: true
  value: 7.3-ubi8
- description: Maximum amount of memory the CakePHP container can use.
  displayName: Memory Limit
  name: MEMORY_LIMIT
  required: true
  value: 512Mi
- description: Maximum amount of memory the MySQL container can use.
  displayName: Memory Limit (MySQL)
  name: MEMORY_MYSQL_LIMIT
  required: true
  value: 512Mi
- description: Volume space available for data, e.g. 512Mi, 2Gi
  displayName: Volume Capacity
  name: VOLUME_CAPACITY
  required: true
  value: 1Gi
- description: The URL of the repository with your application source code.
  displayName: Git Repository URL
  name: SOURCE_REPOSITORY_URL
  required: true
  value: https://github.com/sclorg/cakephp-ex.git
- description: Set this to a branch name, tag or other ref of your repository if you
    are not using the default branch.
  displayName: Git Reference
  name: SOURCE_REPOSITORY_REF
- description: Set this to the relative path to your project if it is not in the root
    of your repository.
  displayName: Context Directory
  name: CONTEXT_DIR
- description: The exposed hostname that will route to the CakePHP service, if left
    blank a value will be defaulted.
  displayName: Application Hostname
  name: APPLICATION_DOMAIN
- description: Github trigger secret.  A difficult to guess string encoded as part
    of the webhook URL.  Not encrypted.
  displayName: GitHub Webhook Secret
  from: '[a-zA-Z0-9]{40}'
  generate: expression
  name: GITHUB_WEBHOOK_SECRET
- displayName: Database Service Name
  name: DATABASE_SERVICE_NAME
  required: true
  value: mysql
- description: 'Database engine: postgresql, mysql or sqlite (default).'
  displayName: Database Engine
  name: DATABASE_ENGINE
  required: true
  value: mysql
- displayName: Database Name
  name: DATABASE_NAME
  required: true
  value: default
- displayName: Database User
  name: DATABASE_USER
  required: true
  value: cakephp
- displayName: Database Password
  from: '[a-zA-Z0-9]{16}'
  generate: expression
  name: DATABASE_PASSWORD
- description: Set this to a long random string.
  displayName: CakePHP secret token
  from: '[\w]{50}'
  generate: expression
  name: CAKEPHP_SECRET_TOKEN
- description: Security salt for session hash.
  displayName: CakePHP Security Salt
  from: '[a-zA-Z0-9]{40}'
  generate: expression
  name: CAKEPHP_SECURITY_SALT
- description: How often to check script timestamps for updates, in seconds. 0 will
    result in OPcache checking for updates on every request.
  displayName: OPcache Revalidation Frequency
  name: OPCACHE_REVALIDATE_FREQ
  value: "2"
- description: The custom Composer mirror URL
  displayName: Custom Composer Mirror URL
  name: COMPOSER_MIRROR
- description: 'The custom MySQL default authentication plugin (default: mysql_native_password),
    might be changed to caching_sha2_password once PHP client supports it.'
  displayName: MySQL authentication plugin
  name: MYSQL_DEFAULT_AUTHENTICATION_PLUGIN
  value: mysql_native_password
objects:
- kind: Service
  apiVersion: v1
  metadata:
    annotations:
      description: Exposes and load balances the application pods
      # service.alpha.openshift.io/dependencies: '[{"name": "${DATABASE_SERVICE_NAME}", "kind": "Service"}]'
    name: ${NAME}
    namespace: ${FRONTEND_NAMESPACE}
  spec:
    ports:
    - name: web
      port: 8080
      targetPort: 8080
    selector:
      name: ${NAME}
- kind: Route
  apiVersion: v1
  metadata:
    name: ${NAME}
    namespace: ${FRONTEND_NAMESPACE}
  spec:
    host: ${APPLICATION_DOMAIN}
    to:
      kind: Service
      name: ${NAME}
- kind: RoleBinding
  apiVersion: rbac.authorization.k8s.io/v1
  metadata:
    annotations:
      openshift.io/description: >-
        Allows CakePHP frontend to pull from build namespace.
    name: system:image-pullers:${FRONTEND_NAMESPACE}
    namespace: ${BUILD_NAMESPACE}
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: ClusterRole
    name: system:image-puller
  subjects:
  - apiGroup: rbac.authorization.k8s.io
    kind: Group
    name: system:serviceaccounts:${FRONTEND_NAMESPACE}
- kind: DeploymentConfig
  apiVersion: v1
  metadata:
    name: ${NAME}
    namespace: ${FRONTEND_NAMESPACE}
    annotations:
      description: Defines how to deploy the application server
      template.alpha.openshift.io/wait-for-ready: "true"
  spec:
    strategy:
      type: Recreate
      recreateParams:
        pre:
          failurePolicy: Retry
          execNewPod:
            command:
            - ./migrate-database.sh
            containerName: cakephp-mysql-persistent
    triggers:
    - type: ImageChange
      imageChangeParams:
        automatic: true
        containerNames:
        - cakephp-mysql-persistent
        from:
          kind: ImageStreamTag
          name: ${NAME}:latest
          namespace: ${BUILD_NAMESPACE}
    - type: ConfigChange
    replicas: 1
    selector:
      name: ${NAME}
    template:
      metadata:
        name: ${NAME}
        labels:
          name: ${NAME}
      spec:
        containers:
        - env:
          - name: MYSQL_SERVICE_HOST
            valueFrom:
              secretKeyRef:
                name: ${NAME}
                key: database-host
          - name: MYSQL_SERVICE_PORT
            value: "3306"
          - name: DATABASE_SERVICE_NAME
            value: ${DATABASE_SERVICE_NAME}
          - name: DATABASE_ENGINE
            value: ${DATABASE_ENGINE}
          - name: DATABASE_NAME
            valueFrom:
              secretKeyRef:
                name: ${NAME}
                key: database-name
          - name: DATABASE_USER
            valueFrom:
              secretKeyRef:
                key: database-user
                name: ${NAME}
          - name: DATABASE_PASSWORD
            valueFrom:
              secretKeyRef:
                key: database-password
                name: ${NAME}
          - name: CAKEPHP_SECRET_TOKEN
            valueFrom:
              secretKeyRef:
                key: cakephp-secret-token
                name: ${NAME}
          - name: CAKEPHP_SECURITY_SALT
            valueFrom:
              secretKeyRef:
                key: cakephp-security-salt
                name: ${NAME}
          - name: OPCACHE_REVALIDATE_FREQ
            value: ${OPCACHE_REVALIDATE_FREQ}
          image: ' '
          livenessProbe:
            httpGet:
              path: /health.php
              port: 8080
            initialDelaySeconds: 30
            periodSeconds: 60
            timeoutSeconds: 3
          name: cakephp-mysql-persistent
          ports:
          - containerPort: 8080
          readinessProbe:
            httpGet:
              path: /health.php
              port: 8080
            initialDelaySeconds: 3
            periodSeconds: 60
            timeoutSeconds: 3
          resources:
            limits:
              memory: ${MEMORY_LIMIT}
